{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "IconBase.svelte",
    "App.svelte",
    "Button.svelte",
    "Input.svelte",
    "Settings.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let title = null;\n  export let viewBox;\n</script>\n\n<style>\n  svg {\n    stroke: currentColor;\n    fill: currentColor;\n    stroke-width: 0;\n    width: 100%;\n    height: auto;\n    max-height: 100%;\n  }  \n</style>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" {viewBox}>\n  {#if title}\n    <title>{title}</title>\n  {/if}\n  <slot />\n</svg>\n",
    "<script>\n  import humanizeDuration from \"humanize-duration\";\n  import Button from \"./components/Button.svelte\";\n\n  import Settings from \"./components/Settings.svelte\";\n  import createStore from \"./store\";\n\n  const { ipcRenderer } = require(\"electron\");\n\n  const sendNotification = () => {\n    console.log(\"SENDING NOTIFICATIOn\");\n\n    ipcRenderer.send(\"notification\", {\n      title: \"Drink watahhhhh\",\n      message: \"Spend few minutes to drink your watah. Stay hydrated.\",\n    });\n  };\n\n  const minutesToMilliseconds = (minutes) => {\n    let minute = 60000;\n\n    let milliseconds = minutes * minute;\n\n    return milliseconds;\n  };\n\n  const timeStore = createStore(\"time\", 30);\n  const settingsStore = createStore(\"settings\", {\n    alarm: true,\n    notification: true,\n  });\n\n  let settings;\n  let milliseconds = minutesToMilliseconds(30);\n  let remainingTime = milliseconds;\n\n  timeStore.subscribe((value) => {\n    milliseconds = minutesToMilliseconds(Number(value));\n    remainingTime = milliseconds;\n  });\n\n  settingsStore.subscribe((val) => {\n    settings = JSON.parse(val);\n  });\n\n  const alarm = new Audio(\"alarm.mp3\");\n\n  let percent = 100;\n\n  let interval;\n\n  let isPaused = true;\n  let isEnd = false;\n\n  const restart = () => {\n    if (interval) {\n      clearInterval(interval);\n    }\n\n    isEnd = false;\n    isPaused = false;\n    percent = 100;\n    remainingTime = milliseconds;\n  };\n\n  const stop = () => {\n    if (settings.notification) {\n      sendNotification();\n    }\n\n    percent = 0;\n    clearInterval(interval);\n    isPaused = false;\n    isEnd = true;\n\n    if (settings.alarm) {\n      alarm.play();\n    }\n  };\n\n  const handleStartClick = () => {\n    if (isEnd || !isPaused) {\n      restart();\n    }\n\n    isPaused = false;\n\n    interval = setInterval(() => {\n      remainingTime -= 1000;\n      percent = (remainingTime / milliseconds) * 100;\n\n      if (remainingTime === 0) {\n        stop();\n      }\n    }, 1000);\n  };\n\n  const handlePauseClick = () => {\n    clearInterval(interval);\n    isPaused = true;\n\n    alarm.pause();\n    alarm.currentTime = 0;\n  };\n</script>\n\n<main style={`--timer-background-percent: ${percent}%`}>\n  {#if isEnd}\n    <h1 class=\"notify-message\">Oi! It's time to drink waterrr.</h1>\n  {/if}\n\n  <div class=\"settings-container\">\n    <Settings />\n  </div>\n\n  <div class=\"timer\">\n    <div class=\"timer__background\" />\n\n    <div class=\"timer__overlay\">\n      <h1 class=\"timer__overlay--title text-lg text-gray-600\">\n        Stay hydrated!\n      </h1>\n\n      <p class=\"timer__overlay--time\">\n        Time left: <strong>\n          {humanizeDuration(remainingTime)}\n        </strong>\n      </p>\n    </div>\n  </div>\n\n  <div class=\"button-container\">\n    <Button\n      on:click={handleStartClick}\n      primary\n      text={isPaused && !isEnd ? \"Start\" : \"Restart\"}\n    />\n    <Button on:click={handlePauseClick} secondary text=\"Pause\" />\n  </div>\n</main>\n\n<style>\n  main {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--bg-background);\n    flex-direction: column;\n  }\n\n  .notify-message {\n    color: white;\n  }\n\n  .timer {\n    width: 20rem;\n    height: 20rem;\n    border-color: white;\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 50%;\n    overflow: hidden;\n    display: flex;\n    align-items: flex-end;\n    position: relative;\n    z-index: 0;\n  }\n\n  .timer__background {\n    width: 100%;\n    height: var(--timer-background-percent);\n    background-color: var(--timer-background-color);\n    transition: height 300ms;\n    z-index: 0;\n  }\n\n  .timer__overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: white;\n    z-index: 0;\n  }\n\n  .timer__overlay--title {\n    color: white;\n  }\n\n  .button-container {\n    margin-top: 2rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .button-container > :global(*) {\n    margin: 0 0.2rem;\n  }\n\n  .settings-container {\n    position: absolute;\n    right: 5px;\n    top: 5px;\n  }\n</style>\n",
    "<script>\r\n  export let primary = false;\r\n  export let secondary = false;\r\n  export let text;\r\n</script>\r\n\r\n<button\r\n  on:click\r\n  class=\"button\"\r\n  class:button--primary={primary}\r\n  class:button--secondary={secondary}\r\n>\r\n  {text}\r\n</button>\r\n\r\n<style>\r\n  .button {\r\n    padding: 0.5rem 2rem;\r\n    cursor: pointer;\r\n    color: white;\r\n    background: none;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    outline: 0;\r\n    background-color: transparent;\r\n    text-align: center;\r\n    border-radius: 0.12em;\r\n  }\r\n\r\n  .button:hover {\r\n    --bg-opacity: 0.8;\r\n  }\r\n\r\n  .button--primary {\r\n    --bg-opacity: 1;\r\n    border-color: rgba(28, 163, 236, var(--bg-opacity));\r\n  }\r\n\r\n  .button--primary:hover {\r\n    --bg-opacity: 1;\r\n    background-color: rgba(28, 163, 236, var(--bg-opacity));\r\n  }\r\n\r\n  .button--secondary {\r\n    --bg-opacity: 1;\r\n    border-color: rgba(255, 0, 0, var(--bg-opacity));\r\n  }\r\n\r\n  .button--secondary:hover {\r\n    --bg-opacity: 1;\r\n    background-color: rgba(255, 0, 0, var(--bg-opacity));\r\n  }\r\n</style>\r\n",
    "<script>\r\n  export let placeholder;\r\n</script>\r\n\r\n<input {placeholder} type=\"text\" on:change />\r\n\r\n<style>\r\n  input {\r\n    background: transparent;\r\n    border: none;\r\n    padding: 0.2rem 1rem;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid rgba(255, 255, 255, 0.8);\r\n    border-radius: 0;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import IoIosSettings from \"svelte-icons/io/IoIosSettings.svelte\";\r\n  import IoIosClose from \"svelte-icons/io/IoIosClose.svelte\";\r\n  import Switch from \"./Switch.svelte\";\r\n  import Input from \"./Input.svelte\";\r\n  import { getStore } from \"../store\";\r\n  let open;\r\n\r\n  const time = getStore(\"time\");\r\n  const settings = getStore(\"settings\");\r\n\r\n  const parsedSettings = JSON.parse($settings);\r\n\r\n  const handleButtonClick = () => {\r\n    open = true;\r\n  };\r\n\r\n  const handleCloseClick = () => {\r\n    open = false;\r\n  };\r\n\r\n  const handleSwitch =\r\n    (key) =>\r\n    ({ detail: { checked } }) => {\r\n      settings.update((old) => {\r\n        const parsed = JSON.parse(old);\r\n\r\n        parsed[key] = checked;\r\n\r\n        return JSON.stringify(parsed);\r\n      });\r\n    };\r\n\r\n  const handleInput =\r\n    (key, validation) =>\r\n    ({ target: { value } }) => {\r\n      if (!validation(value)) return;\r\n\r\n      time.set(value);\r\n    };\r\n</script>\r\n\r\n<div class=\"settings\">\r\n  <div class=\"settings__button\" on:click={handleButtonClick}>\r\n    <IoIosSettings />\r\n  </div>\r\n\r\n  {#if open}\r\n    <div class=\"settings__panel\">\r\n      <div class=\"settings__header\">\r\n        <p class=\"settings__header--title\">Settings</p>\r\n        <div class=\"settings__header--close\" on:click={handleCloseClick}>\r\n          <IoIosClose />\r\n        </div>\r\n      </div>\r\n      <div class=\"settngs__content\">\r\n        <div class=\"settings__item\">\r\n          <p class=\"settings__item--label\">Time (minutes)</p>\r\n          <Input\r\n            placeholder={$time}\r\n            on:change={handleInput(\"time\", (value) => !isNaN(value))}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"settings__item\">\r\n          <p class=\"settings__item--label\">Alarm sound</p>\r\n          <Switch\r\n            checkedValue={parsedSettings[\"alarm\"]}\r\n            on:switch={handleSwitch(\"alarm\")}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"settings__item\">\r\n          <p class=\"settings__item--label\">Notification</p>\r\n          <Switch\r\n            checkedValue={parsedSettings[\"notification\"]}\r\n            on:switch={handleSwitch(\"notification\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settings_overlay\" />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .settings {\r\n    position: relative;\r\n    z-index: 10;\r\n  }\r\n\r\n  .settings__button {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .settings__panel {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    min-height: 20rem;\r\n    min-width: 30rem;\r\n    background-color: var(--bg-background-darker);\r\n    color: white;\r\n    z-index: 99;\r\n    border-radius: 1rem;\r\n    padding: 1rem 2rem;\r\n  }\r\n\r\n  .settings_overlay {\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n  .settings__header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .settings__header--title {\r\n    color: var(--primary);\r\n    font-weight: bold;\r\n  }\r\n\r\n  .settings__header--close {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .settings__item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 1rem auto;\r\n  }\r\n\r\n  .settings__item--label {\r\n    margin: 0;\r\n    margin-right: 0.5rem;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}